---
## main.yml - OpenShift Origin Node role for an OpenShift Origin deployment
#
# Ansible playbook to deploy OpenShift Origin using nightly builds
#
#

- name: Setup OpenShift Origin Nightly Supplemental Repo
  copy: src=jenkins.repo dest=/etc/yum.repos.d/jenkins.repo

- name: Set broker_fqdn in /etc/hosts
  lineinfile: dest=/etc/hosts 
              regexp="{{oo_ipaddr}} {{broker_fqdn}}"
              line='{{oo_ipaddr}} {{broker_fqdn}}' 

- name: SELinux - configure sebooleans
  seboolean:  name={{item}} state=true persistent=yes
  with_items:
    - httpd_run_stickshift
    - polyinstantiation_enabled
    - httpd_can_network_connect
    - httpd_can_network_relay
    - httpd_read_user_content
    - httpd_enable_homedirs
    - httpd_execmem

# FirewallD Configs
- name: Configure Persistent FirewallD for http console
  firewalld: service=http permanent=true state=enabled
- name: Configure Persistent FirewallD for https console
  firewalld: service=https permanent=true state=enabled
- name: Configure Persistent FirewallD for port 8000/tcp
  firewalld: port=8000/tcp permanent=true state=enabled
- name: Configure Persistent FirewallD for port 8443/tcp
  firewalld: port=8443/tcp permanent=true state=enabled
- name: Configure FirewallD for http console
  firewalld: service=http permanent=false state=enabled
- name: Configure FirewallD for https console
  firewalld: service=https permanent=false state=enabled
- name: Configure FirewallD for port 8000/tcp
  firewalld: port=8000/tcp permanent=false state=enabled
- name: Configure FirewallD for port 8443/tcp
  firewalld: port=8443/tcp permanent=false state=enabled

# sysctl changes needed by OpenShift Origin Node
- name: sysctl - kernel.sem 
  sysctl: name=kernel.sem state=present value="250  32000 32  4096"
          reload=yes
- name: sysctl - net.ipv4.ip_local_port_range
  sysctl: name=net.ipv4.ip_local_port_range state=present 
          value="15000 35530" reload=yes
- name: sysctl - net.netfilter.nf_conntrack_max
  sysctl: name=net.netfilter.nf_conntrack_max state=present 
          value="1048576" reload=yes

### Dev tools needed by some gem installs for native modules/extensions 
- name: Install dev-tool deps for gem installs
  yum: pkg={{item}} state=latest
  with_items:
    - ruby-devel 
    - audit
    - mariadb-devel 
    - mongodb-devel 
    - gcc 
    - make

### Install pkgs for OpenShift Origin Node
- name: Install OpenShift Package List
  yum: pkg={{item}} state=latest
  with_items:
    - rubygem-openshift-origin-node
    - rubygem-passenger-native
    - openshift-origin-port-proxy
    - openshift-origin-node-util
    - rubygem-openshift-origin-container-selinux
    - openshift-origin-msg-node-mcollective
    - mcollective-common
    - mcollective
    - git
    - make
    - cronie
  async: 5400
  poll: 10

### FIXME - Workaround to verify dir exists
- name: Verify /var/lib/openshift/.httpd.d/ exists
  file: path=/var/lib/openshift/.httpd.d/ owner=root group=apache mode=0750
        state=directory

### FIXME - Workaround to verify symlink exists
- name: Verify /etc/httpd/conf.d/openshift symlink exists
  file: src=/var/lib/openshift/.httpd.d/ dest=/etc/httpd/conf.d/openshift
        state=link

### Install cartridge pkgs for OpenShift Origin Node
- name: Install OpenShift Cartridge Packages
  yum: pkg={{item}} state=latest
  with_items:
    - openshift-origin-cartridge-abstract
    - openshift-origin-cartridge-10gen-mms-agent
    - openshift-origin-cartridge-cron
    - openshift-origin-cartridge-diy
    - openshift-origin-cartridge-haproxy
    - openshift-origin-cartridge-mongodb
    - openshift-origin-cartridge-mariadb
    - openshift-origin-cartridge-nodejs
    - openshift-origin-cartridge-jenkins
    - openshift-origin-cartridge-jenkins-client
    - openshift-origin-cartridge-python
    - openshift-origin-cartridge-postgresql
    - openshift-origin-cartridge-ruby
    - openshift-origin-cartridge-php
    - openshift-origin-cartridge-perl
    - openshift-origin-cartridge-phpmyadmin
  async: 5400
  poll: 10

### Register DNS
#FIXME === This doesn't work, need to sort that out
#FIXME - Should parameterize this later
#- name: Register DNS
#  shell: "{{oo-register-dns}} -h {{ansible_fqdn}} -n {{oo_ipaddr}}"

#FIXME - Need to add a config option for namserver config for not-all-in-one

### Install mq_provider
- name: Install MCollective Provider - QPID
  yum: pkg=mcollective-qpid-plugin state=latest
  when: mq_provider == "qpid"

- name: Install MCollective Provider - ActiveMQ
  yum: pkg=activemq state=latest
  when: mq_provider == "activemq"

### Install libvirt bits for sandboxing
- name: Install libvirt requirements
  yum: pkg={{item}} state=latest
  with_items:
    - libvirt-daemon
    - libvirt-sandbox
- name: Start and Enable libvirtd
  service: name=libvirtd state=started enabled=yes

### Configure dhclient FIXME - for not-all-in-one

### Post pkginstall config
- name: node.conf
  template: src=node.conf.j2
            dest=/etc/openshift/node.conf
            owner=root group=root mode=0644
- name: openshift_origin_node_severname.conf
  template: src=openshift-origin-node_servername.conf.j2
            dest=/etc/httpd/conf.d/000001_openshift_origin_node_servername.conf
            owner=root group=root mode=0644
- name: ensure mcollective dir in place
  file: path="/etc/mcollective/" owner=root group=root mode=0755 state=directory
- name: mcollective server config
  template: src=mcollective-server.cfg.j2
            dest=/etc/mcollective/server.cfg
            owner=root group=root mode=0644
- name: Find root mount point of gear dir
  shell: df -P /var/lib/openshift | tail -1 | awk '{ print $6 }'
  register: gear_root_mount
  changed_when: False
- name: Verify origin-node-util installed for quota init
  yum: pkg=openshift-origin-node-util state=latest
- name: Initialize quota db
  shell: oo-init-quota creates={{gear_root_mount.stdout}}/aquota.user
- name: openshift node pam sshd config
  template: src=pam.sshd-fedora.j2
            dest=/etc/pam.d/sshd
            owner=root group=root mode=0644

### Configure PAM
- name: openshift node pam runuser
  copy: src=pam.runuser-fedora
        dest=/etc/pam.d/runuser owner=root group=root mode=0644
- name: openshift node pam runuser-l
  copy: src=pam.runuser-l-fedora
        dest=/etc/pam.d/runuser-l owner=root group=root mode=0644
- name: openshift node pam su
  copy: src=pam.su-fedora
        dest=/etc/pam.d/su owner=root group=root mode=0644
- name: openshift node pam system-auth-ac
  copy: src=pam.system-auth-ac-fedora
        dest=/etc/pam.d/system-auth-ac owner=root group=root mode=0644
- name: openshift node pam-namespace sandbox.conf
  template: src=namespace-d-sandbox.conf.j2
        dest=/etc/security/namespace.d/sandbox.conf
        owner=root group=root mode=0644
- name: openshift node pam-namespace tmp.conf
  template: src=namespace-d-tmp.conf.j2
        dest=/etc/security/namespace.d/tmp.conf
        owner=root group=root mode=0644
- name: openshift node pam-namespace vartmp.conf
  template: src=namespace-d-vartmp.conf.j2
        dest=/etc/security/namespace.d/vartmp.conf
        owner=root group=root mode=0644


- name: openshift node sshd config
  copy: src=sshd_config dest=/etc/ssh/sshd_config
        owner=root group=root mode=0600
#- name: broker and console route for node
#  copy: src=node_routes.txt dest=/tmp/nodes.broker_routes.txt
#        owner=root group=root mode=0644

- name: Restore SELinux context "{{gear_root_dir}}"
  command: "{{restorecon}} -Rv {{gear_root_dir}}"
  changed_when: False
- name: Restore SELinux context "{{gear_httpd_dir}}"
  command: "{{restorecon}} -Rv {{gear_httpd_dir}}"
  changed_when: False

### Verify all services are up
- name: Verify libcgroup-tools are installed for cgconfig/cgred
  yum: pkg=libcgroup-tools state=latest
- name: start/enable cgconfig service
  service: name=cgconfig state=started enabled=yes
  when: configure_cgroups == 'true'
- name: start/enable cgred service
  service: name=cgred state=started enabled=yes
  when: configure_cgroups == 'true'

- name: enable openshift traffic control
  service: name=openshift-tc enabled=yes

- name: start/enable openshift-gears
  service: name=openshift-gears state=started enabled=yes

- name: start/enable openshift-port-proxy service
  service: name=openshift-port-proxy state=started enabled=yes

- name: start/enable crond
  service: name=crond state=started enabled=yes

- name: start/enable openshift-node-web-proxy
  service: name=openshift-node-web-proxy state=started enabled=yes

- name: start/enable mcollective
  service: name=mcollective state=started enabled=yes

- name: start/enable oddjobd
  service: name=oddjobd state=started enabled=yes

- name: start/enable sshd
  service: name=sshd state=started enabled=yes
